server:
  port: 8080

logging:
  level:
    root: INFO
    co.com.pokemon: DEBUG
  file:
    name: logs/application.log
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

spring:
  devtools:
    restart:
      enabled: false
  codec:
    max-in-memory-size: 10MB
  application:
    name: "pokemonapp"
  datasource:
    url: "${DB_URL}"
    username: "${DB_USERNAME}"
    password: "${DB_PASSWORD}"
    driverClassName: "org.postgresql.Driver"
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
  jpa:
    databasePlatform: "org.hibernate.dialect.PostgreSQLDialect"
    hibernate:
      ddl-auto: update
    show-sql: true

adapter:
  pokemonapi:
    url: "https://api.pokemontcg.io/v2"
    apikey: "${POKEMON_API_KEY}"

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true

resilience4j:
  circuitbreaker:
    instances:
      pokemonApiGetCircuitBreaker:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      pokemonApiPostCircuitBreaker:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"

  retry:
    instances:
      pokemonApiGetRetry:
        max-attempts: 3
        wait-duration: 500ms
      pokemonApiPostRetry:
        max-attempts: 3
        wait-duration: 500ms



cors:
  allowed-origins: "http://localhost:4200,http://localhost:8080"

users:
  auth:
    username: "${USERNAME}"
    password: "${PASSWORD}"